;保护模式下
[bits 32]

;定义两个宏，用来作为中断处理程序
%define ERROR_CODE nop
%define ZERO push 0

extern put_str;

section .data
intr_str db "interrupt occur!", 0xa, 0 
global intr_entry_table

intr_entry_table:

%macro VECTOR 2
section .text
intr%1entry:
  %2
  push intr_str
  call put_str
  add esp, 4

  mov al, 0x20
  ;设置中断控制器8259A的中断结束方式和优先级模式
  ;OCW2写入到主片的0x20端口和从片的0xA0端口
  out 0xa0, al
  out 0x20, al

  add esp, 4
  iret

section .data
  ;存储各个中断入口程序的地址，形成数组
  dd intr%1entry
%endmacro

;如果中断号没有error code，那么就push 0到栈里面
VECTOR 0x00, ZERO
VECTOR 0x01, ZERO
VECTOR 0x02, ZERO
VECTOR 0x03, ZERO 
VECTOR 0x04, ZERO
VECTOR 0x05, ZERO
VECTOR 0x06, ZERO
VECTOR 0x07, ZERO 
VECTOR 0x08, ERROR_CODE
VECTOR 0x09, ZERO
VECTOR 0x0a, ERROR_CODE
VECTOR 0x0b, ERROR_CODE 
VECTOR 0x0c, ZERO
VECTOR 0x0d, ERROR_CODE
VECTOR 0x0e, ERROR_CODE
VECTOR 0x0f, ZERO 
VECTOR 0x10, ZERO
VECTOR 0x11, ERROR_CODE
VECTOR 0x12, ZERO
VECTOR 0x13, ZERO 
VECTOR 0x14, ZERO
VECTOR 0x15, ZERO
VECTOR 0x16, ZERO
VECTOR 0x17, ZERO 
VECTOR 0x18, ERROR_CODE
VECTOR 0x19, ZERO
VECTOR 0x1a, ERROR_CODE
VECTOR 0x1b, ERROR_CODE 
VECTOR 0x1c, ZERO
VECTOR 0x1d, ERROR_CODE
VECTOR 0x1e, ERROR_CODE
VECTOR 0x1f, ZERO 
VECTOR 0x20, ZERO
 

